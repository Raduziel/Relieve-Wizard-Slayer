//__________________________________________________________________________________
//__________________________________________________________________________________
//
//				  RELIEVE THE WIZARD SLAYER (IWDEE, BGEE, BG2EE and EET)
//__________________________________________________________________________________
//__________________________________________________________________________________

COPY_EXISTING_REGEXP GLOB ~.*\.itm~ ~override~                  //Kindly provided and explained by kjeron with a solid base that Grammarsalad gave me to start knowing what to ask and look for.
	PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
		READ_SHORT	0x6a	fx_off
		READ_SHORT	0x70	glob_fx
		FOR	(j = 0; j < glob_fx; ++j)	BEGIN
			READ_SHORT (fx_off + j * 0x30) opcode
			PATCH_IF (opcode = 31) OR (opcode = 166)  BEGIN
				WRITE_BYTE	0x002f	(THIS BAND 0b11111101)
				SET j = glob_fx
			END
		END
	END
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~POTN33.itm~ ~override~                            //Potion of Magic Blocking
WRITE_BYTE 0x2f (THIS BAND 0b11111101)

COPY_EXISTING ~POTN34.itm~ ~override~                            //Potion of Magic Protection
WRITE_BYTE 0x2f (THIS BAND 0b11111101)

COPY_EXISTING ~POTN35.itm~ ~override~                            //Potion of Magic Shielding
WRITE_BYTE 0x2f (THIS BAND 0b11111101)

ACTION_IF (MOD_IS_INSTALLED ~wsr/setup-wsr.tp2~ ~0~) BEGIN

ACTION_IF (FILE_EXISTS_IN_GAME ~clastext.2da~) BEGIN
  COPY_EXISTING ~clastext.2da~ ~override~
	COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
	    SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@102)
	  END	
	END
  BUT_ONLY
END
ACTION_IF (FILE_EXISTS_IN_GAME ~sodcltxt.2da~) BEGIN
  COPY_EXISTING ~sodcltxt.2da~ ~override~
	COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
	    SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@102)
	  END 
	END
  BUT_ONLY
END
ACTION_IF (FILE_EXISTS_IN_GAME ~kitlist.2da~) BEGIN
  COPY_EXISTING ~kitlist.2da~ ~override~
    COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 1 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
		SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@102)
	  END
	END
  BUT_ONLY
END

END ELSE BEGIN

ACTION_IF (MOD_IS_INSTALLED ~wso/wso.tp2~ ~0~) BEGIN

ACTION_IF (FILE_EXISTS_IN_GAME ~clastext.2da~) BEGIN
  COPY_EXISTING ~clastext.2da~ ~override~
	COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
	    SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@103)
	  END	
	END
  BUT_ONLY
END
ACTION_IF (FILE_EXISTS_IN_GAME ~sodcltxt.2da~) BEGIN
  COPY_EXISTING ~sodcltxt.2da~ ~override~
	COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
	    SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@103)
	  END 
	END
  BUT_ONLY
END
ACTION_IF (FILE_EXISTS_IN_GAME ~kitlist.2da~) BEGIN
  COPY_EXISTING ~kitlist.2da~ ~override~
    COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 1 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
		SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@103)
	  END
	END
  BUT_ONLY
END

END ELSE BEGIN

ACTION_IF (FILE_EXISTS_IN_GAME ~clastext.2da~) BEGIN
  COPY_EXISTING ~clastext.2da~ ~override~
	COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
	    SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@104)
	  END	
	END
  BUT_ONLY
END
ACTION_IF (FILE_EXISTS_IN_GAME ~sodcltxt.2da~) BEGIN
  COPY_EXISTING ~sodcltxt.2da~ ~override~
	COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 0 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
	    SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@104)
	  END 
	END
  BUT_ONLY
END
ACTION_IF (FILE_EXISTS_IN_GAME ~kitlist.2da~) BEGIN
  COPY_EXISTING ~kitlist.2da~ ~override~
    COUNT_2DA_COLS cols
	READ_2DA_ENTRIES_NOW rows cols
	FOR (row = 1; row < rows; ++row) BEGIN
	  READ_2DA_ENTRY_FORMER rows row 1 ~text~
	  PATCH_IF (~%text%~ STRING_EQUAL_CASE ~WIZARD_SLAYER~) BEGIN
		SET_2DA_ENTRY %row% 4 cols RESOLVE_STR_REF (@104)
	  END
	END
  BUT_ONLY
END

END

END

//EoF